import React, { useState } from "react";
import styles from "./ProductCard.module.scss";
import Button from "../Button/button";
import { useCart } from "../../../Context/CartContext";

interface ProductCardProps {
  product: any;
  onClose: () => void;
}

const ProductCard: React.FC<ProductCardProps> = ({ product, onClose }) => {
  const [activeImageIndex, setActiveImageIndex] = useState(0);
  const { dispatch, setCartOpen, cartState } = useCart();

  const handleThumbnailClick = (index: number) => {
    setActiveImageIndex(index);
  };

  if (!product || !product.images || product.images.length === 0) {
    return (
      <div className={styles.productCard}>
        <p>–ü—Ä–æ–¥—É–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.</p>
        <button onClick={onClose} className={styles.close}>
          –ó–∞–∫—Ä—ã—Ç—å
        </button>
      </div>
    );
  }

  const handleAddToCart = () => {
    if (!product || !product.name || !product.price) {
      console.error(
        "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É: –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
      );
      return;
    }

    const newItem = {
      id: product.id,
      name: product.name,
      price: product.price,
      image: product.images[0],
      quantity: 1,
    };

    dispatch({ type: "ADD_ITEM", payload: newItem });
    setCartOpen(true);
    onClose();
  };

  const handleShare = () => {
    const productUrl = `${window.location.origin}?product=${product.url}`;
    const shareData = {
      title: product.name,
      text: `–ü–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫–∞—è –∫–ª–∞—Å—Å–Ω–∞—è –∏–≥—Ä—É—à–∫–∞ - ${product.name}!`,
      url: productUrl,
    };

    if (navigator.share) {
      // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º Web Share API
      navigator
        .share(shareData)
        .catch((error) =>
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:", error)
        );
    } else {
      // –ù–∞ –ü–ö –∫–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º
      navigator.clipboard.writeText(`${shareData.text}\n${productUrl}`);
      alert("–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!");
    }
  };

  return (
    <div className={styles.productCard}>
      <div className={styles.productCarousel}>
        <div className={styles.productMainImage}>
          {product.images[activeImageIndex] ? (
            <img
              src={product.images[activeImageIndex]}
              alt={product.name || "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"}
            />
          ) : (
            <p>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>
          )}
        </div>
        <div className={styles.productCarouselImg}>
          {product.images.length > 1 &&
            product.images.map((item: string, index: number) => (
              <img
                key={index}
                className={`${styles.imagesCarousel} ${
                  activeImageIndex === index ? styles.activeThumbnail : ""
                }`}
                src={item}
                alt={product.name || "–ú–∏–Ω–∏–∞—Ç—é—Ä–∞"}
                onClick={() => handleThumbnailClick(index)}
              />
            ))}
        </div>
      </div>
      <div className={styles.rightSide}>
        <button className={styles.close} onClick={onClose}>
          ‚ùå
        </button>
        <h3
          className="sharedContainer"
          style={{
            display: "flex",
            justifyContent: "left",
            alignItems: "center",
          }}
        >
          {product.name}
          <Button
            size="large"
            type="primary"
            onClick={handleShare}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              version="1.1"
              width="18"
              height="18"
              x="0"
              y="0"
              viewBox="0 0 16 16"
              style={{position: "relative", top: "3px"}}
            >
              <g>
                <path
                  d="M2.41 9.91a3.049 3.049 0 0 0 3.045 3.045h6.429l-1.692 1.691a.5.5 0 1 0 .707.707l2.545-2.544a.501.501 0 0 0 0-.708l-2.545-2.545a.5.5 0 0 0-.707.707l1.692 1.692h-6.43A2.048 2.048 0 0 1 3.41 9.909V7.364a.5.5 0 0 0-1 0zM5.808.646a.5.5 0 0 0-.707 0L2.556 3.192a.501.501 0 0 0 0 .709l2.545 2.544a.5.5 0 0 0 .707-.707L4.116 4.045h6.43a2.048 2.048 0 0 1 2.045 2.046v2.545a.5.5 0 0 0 1 0V6.091a3.049 3.049 0 0 0-3.046-3.046H4.116l1.692-1.691a.5.5 0 0 0 0-.707z"
                  fill="#ffffff"
                  opacity="1"
                  data-original="#000000"
                ></path>
              </g>
            </svg>{" "}
            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
          </Button>
        </h3>
        <p>{product.description}</p>

        <hr style={{ border: "1px solid #eee" }} />

        <p>
          <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</b>
        </p>
        <span className={styles.label}>ü§≤ –†—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞</span>
        <span className={styles.label}>üåø –ì–∏–ø–æ–∞–ª–µ—Ä–≥–µ–Ω–Ω–æ</span>
        <span className={styles.label}>üéÅ –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞</span>

        <p>
          <b>–†–∞–∑–º–µ—Ä—ã</b>
        </p>
        <span className={styles.label}>‚öñÔ∏è –í–µ—Å –∏–≥—Ä—É—à–∫–∏: {product.weight}</span>
        <span className={styles.label}>üìê –†–∞–∑–º–µ—Ä: {product.size}</span>

        <Button
          className="main"
          size="large"
          type="primary"
          onClick={handleAddToCart}
        >
          {`–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É –∑–∞ ${product.price} ‚ÇΩ`}
        </Button>
        <Button className={styles.wishlistButton} size="large" type="secondary">
          <img src="icons/wishlist.svg" alt="" />
        </Button>

        <span className={styles.small}>
          –ü–æ –∂–µ–ª–∞–Ω–∏—é –∑–∞–∫–∞–∑—á–∏–∫–∞ —Ü–≤–µ—Ç–∞ –∏–≥—Ä—É—à–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã*
        </span>
      </div>
    </div>
  );
};

export default ProductCard;
