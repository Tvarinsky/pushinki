// ProductCard.tsx

import React, { useState } from "react";
import styles from "./ProductCard.module.scss";
import Button from "../Button/button";

interface ProductCardProps {
  product: any;
  onClose: () => void;
}

const ProductCard: React.FC<ProductCardProps> = ({ product, onClose }) => {
  const [activeImageIndex, setActiveImageIndex] = useState(0);

  const handleThumbnailClick = (index: number) => {
    setActiveImageIndex(index);
  };

  return (
    <div className={styles.productCard}>
      <div className={styles.productCarousel}>
        <div className={styles.productMainImage}>
          <img src={product.images[activeImageIndex]} alt="" />
        </div>
        <div className={styles.productCarouselImg}>
          {product.images.length > 1 &&
            product.images.map((item: string, index: number) => (
              <img
                key={index}
                className={`${styles.imagesCarousel} ${
                  activeImageIndex === index ? styles.activeThumbnail : ""
                }`}
                src={item}
                alt=""
                onClick={() => handleThumbnailClick(index)}
              />
            ))}
        </div>
      </div>
      <div className={styles.rightSide}>
        <button className={styles.close} onClick={onClose}>
          ‚ùå
        </button>
        <h3>{product.name}</h3>
        <p>{product.description}</p>

        <hr style={{ border: "1px solid #eee" }} />

        <p>
          <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</b>
        </p>
        <span className={styles.label}>ü§≤ –†—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞</span>
        <span className={styles.label}>üåø –ì–∏–ø–æ–∞–ª–µ—Ä–≥–µ–Ω–Ω–æ</span>
        <span className={styles.label}>üéÅ –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞</span>

        <p>
          <b>–†–∞–∑–º–µ—Ä—ã</b>
        </p>
        <span className={styles.label}>üìè –í—ã—Å–æ—Ç–∞: 20 —Å–º</span>
        <span className={styles.label}>üìê –®–∏—Ä–∏–Ω–∞: 15 —Å–º</span>

        <Button className="main" size="large" type="primary">
          {`–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É –∑–∞ ${product.price} ‚ÇΩ`}
        </Button>
      </div>
    </div>
  );
};

export default ProductCard;
